#Problem 1
sales1<-c(12,14,16,29,30,45,19,20,16, 19, 34, 20)
sales2<-rpois(12,34) # random numbers, Poisson distribution, mean at 34, 12 numbers
par(bg="cornsilk")
plot(sales1, col="blue", type="o", ylim=c(0,100), xlab="Month", ylab="Sales" )
title(main="Sales by Month")
lines(sales2, type="o", pch=22, lty=2, col="red")
grid(nx=NA, ny=NULL)
legend("topright", inset=.05, c("Sales1","Sales2"), fill=c("blue","red"), horiz=TRUE)
#Problem 2
sales<-read.table(file.choose(), header=T)
sales # to verify that data has been read
barplot(as.matrix(sales), main="Sales Data", ylab= "Total",beside=T, col=rainbow(5))
#Problem 3
fn<-boxplot(sales,col=c("orange","green"))$stats
text(1.45, fn[3,2], paste("Median =", fn[3,2]), adj=0, cex=.7)
text(0.45, fn[3,1],paste("Median =", fn[3,1]), adj=0, cex=.7)
grid(nx=NA, ny=NULL)
#Problem 4
fb1<-read.csv(file.choose())
aapl1<-read.csv(file.choose())
par(bg="cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(150,200), xlab="Days", ylab="Price" )
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
#Just study the distribution of the adjusted close of the stock price of Apple.
hist(aapl1$Adj.Close, col=rainbow(8))
#Problem 5
data()
#Observe the data sets available for explorations.
attach(sleep)
head(sleep)
summary(sleep)
#after analysis remove the data from the memory
detach(sleep)
#Also explore newer data sets in
library (help=datasets)
library(datasets)
head(sleep)
plot(sleep)
#Problem 6-1
library("ggmap")
library("maptools")
library(maps)
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima,Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
#Problem 6-2
library("ggmap")
library("maptools")
library(maps)
visited <- c("SFO", "New York", "Buffalo", "Dallas, TX")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("state", fill=TRUE, col=rainbow(50), bg="lightblue", mar=c(0,0,0,0))
points(visit.x,visit.y, col="yellow", pch=36)
#Problem 7-1
library(datasets)
library(lattice)
splom(mtcars[c(1,3,4,5,6)], main="MTCARS Data")
splom(mtcars[c(1,3,4,6)], main="MTCARS Data")
splom(mtcars[c(1,3,4,6)], col=rainbow(7),main="MTCARS Data")
#Problem 7-2
library(datasets)
library(lattice)
splom(rock[c(1,2,3,4)], main="ROCK Data")
#Problem 8
# ggplot with Example: Housing prices
# Reference: http://tutorials.iq.harvard.edu/R/Rgraphics/Rgraphics.html
housing <- read.csv(file.choose())
head(housing[1:5])
library(ggplot2)
ggplot(housing, aes(x = Home.Value)) +
geom_histogram()
ggplot(subset(housing, State %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
hp2001Q1 <- subset(housing, Date == 2001.25)
ggplot(hp2001Q1,
aes(y = Structure.Cost, x = Land.Value)) +
geom_point()
ggplot(hp2001Q1,
aes(y = Structure.Cost, x = log(Land.Value))) +
geom_point()
hp2001Q1$pred.SC <- predict(lm(Structure.Cost ~ log(Land.Value), data = hp2001Q1))
p1 <- ggplot(hp2001Q1, aes(x = log(Land.Value), y = Structure.Cost))
p1 + geom_point(aes(color = Home.Value)) +
geom_line(aes(y = pred.SC))
p1 +
geom_point(aes(color = Home.Value)) +
geom_smooth()
p1 +
geom_text(aes(label=State), size = 3)
library("ggrepel")
p1 +
geom_point() +
geom_text_repel(aes(label=State), size = 3)
p1 +
geom_point(aes(size = 2),# incorrect! 2 is not a variable
color="red") # this is fine -- all points red
p1 +
geom_point(aes(color=Home.Value, shape = region))
#Part 2 - Example 1
# Choose WHO_NREVSS_Clinical_Labs.csv upon file choice
excelData<-read.csv(file.choose())
#head(excelData)
par(mar=c(5,5,5,5))
barplot(excelData$TOTAL.A, col = "yellow",
xlab="Week", ylab="Number of Positive Specimens",
xaxt="n", yaxt="n", ylim = c(0,18000),space = 0)
#Part 2 - Example 1
# Choose WHO_NREVSS_Clinical_Labs.csv upon file choice
excelData<-read.csv(file.choose())
final_latlongDF <- merge(latlongDF, latlongDF1)
latlongDF <- read.csv(file.choose())
latlongDF1 <- read.csv(file.choose())
final_latlongDF <- merge(latlongDF, latlongDF1)
states <- map('state', fill=TRUE, col="transparent", plot=FALSE)
latlongDF <- read.csv(file.choose())
final_latlongDF <- merge(latlongDF, latlongDF1)
states <- map('state', fill=TRUE, col="transparent", plot=FALSE)
library(sp)
library(maps)
library(maptools)
# Choose coordinates.csv and coordinates1.csv on consecutive file choices
latlongDF <- read.csv(file.choose())
latlongDF1 <- read.csv(file.choose())
final_latlongDF <- merge(latlongDF, latlongDF1)
states <- map('state', fill=TRUE, col="transparent", plot=FALSE)
IDs <- sapply(strsplit(states$names, ":"), function(x) x[1])
states_sp <- map2SpatialPolygons(states, IDs=IDs,
proj4string=CRS("+proj=longlat +datum=WGS84"))
latlongSP <- SpatialPoints(final_latlongDF,
proj4string=CRS("+proj=longlat +datum=WGS84"))
indices <- over(latlongSP, states_sp)
stateNames <- sapply(states_sp@polygons, function(x) x@ID)
# stateNames[indices]
finalStates <- na.omit(stateNames[indices])
states_table <- table(finalStates)
states_df <- data.frame(states_table)
#states_df
library(ggplot2)
library(maps)
states <- map_data("state")
geo_data<-data.frame(region=unique(states_df$finalStates),states_df$Freq)
map.df <- merge(states,geo_data, by="region", all.x =T)
Frequency<-map.df$states_df.Freq
map.df[is.na(map.df)] <- 0
#write.csv(map.df, file="states1.csv")
v <- qplot(long,lat, data=map.df, geom = "polygon",
main="Heat Map, Data Analysis for Influenza with Twitter",group=group, fill=Frequency)
v
final_latlongDF <- merge(latlongDF, latlongDF1)
states <- map('state', fill=TRUE, col="transparent", plot=FALSE)
IDs <- sapply(strsplit(states$names, ":"), function(x) x[1])
states_sp <- map2SpatialPolygons(states, IDs=IDs,
proj4string=CRS("+proj=longlat +datum=WGS84"))
latlongSP <- SpatialPoints(final_latlongDF,
proj4string=CRS("+proj=longlat +datum=WGS84"))
indices <- over(latlongSP, states_sp)
stateNames <- sapply(states_sp@polygons, function(x) x@ID)
# stateNames[indices]
finalStates <- na.omit(stateNames[indices])
states_table <- table(finalStates)
states_df <- data.frame(states_table)
#states_df
library(ggplot2)
library(maps)
states <- map_data("state")
geo_data<-data.frame(region=unique(states_df$finalStates),states_df$Freq)
map.df <- merge(states,geo_data, by="region", all.x =T)
Frequency<-map.df$states_df.Freq
map.df[is.na(map.df)] <- 0
#write.csv(map.df, file="states1.csv")
library(dplyr)
us <- map_data("state")
gg <- ggplot()
gg <- gg + geom_map(data=us, map=us,
aes(x=long, y=lat, map_id=region),
color="#ffffff", size=0.15)
gg <- gg + geom_map(data=map.df, map=us,
aes(fill=Frequency, map_id=region),
color="#ffffff", size=0.15)
gg <- gg + scale_fill_continuous(low='red', high='red4',
guide='colorbar')
gg <- gg + labs(x=NULL, y=NULL)
gg <- gg + coord_map("albers", lat0 = 39, lat1 = 45)
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg <- gg + ggtitle("Heat Map, Data analysis of Influenza with Twitter")
gg
gg <- ggplot()
gg <- gg + geom_map(data=us, map=us,
aes(x=long, y=lat, map_id=region),
color="#ffffff", size=0.15)
gg <- gg + geom_map(data=map.df, map=us,
aes(fill=Frequency, map_id=region),
color="#ffffff", size=0.15)
gg <- gg + scale_fill_continuous(low='red', high='red4',
guide='colorbar')
gg <- gg + ggtitle("Heat Map, Data analysis of Influenza with Twitter")
gg
gg <- ggplot()
gg <- gg + geom_map(data=us, map=us,
aes(x=long, y=lat, map_id=region),
color="red", size=0.15)
gg <- gg + geom_map(data=map.df, map=us,
aes(fill=Frequency, map_id=region),
color="#ffffff", size=0.15)
gg <- gg + scale_fill_continuous(low='red', high='red4',
guide='colorbar')
gg <- gg + ggtitle("Heat Map, Data analysis of Influenza with Twitter")
gg
gg <- ggplot()
gg <- gg + geom_map(data=us, map=us,
aes(x=long, y=lat, map_id=region),
color="red", size=0.15)
gg <- gg + geom_map(data=map.df, map=us,
aes(fill=Frequency, map_id=region),
color="red", size=0.15)
gg <- gg + scale_fill_continuous(low='red', high='red4',
guide='colorbar')
gg <- gg + ggtitle("Heat Map, Data analysis of Influenza with Twitter")
gg
gg <- ggplot()
gg <- gg + geom_map(data=us, map=us,
aes(x=long, y=lat, map_id=region),
color="red", size=0.15)
gg <- gg + geom_map(data=map.df, map=us,
aes(fill=Frequency, map_id=region),
color="#ffffff", size=0.15)
gg <- gg + scale_fill_continuous(low='red', high='red4',
guide='colorbar')
gg <- gg + ggtitle("Heat Map, Data analysis of Influenza with Twitter")
gg
gg <- gg + scale_fill_continuous(low='red', high='red4',
guide='colorbar',na.value = 'red')
gg <- ggplot()
gg <- gg + geom_map(data=us, map=us,
aes(x=long, y=lat, map_id=region),
color="red", size=0.15)
gg <- gg + geom_map(data=map.df, map=us,
aes(fill=Frequency, map_id=region),
color="#ffffff", size=0.15)
gg <- gg + scale_fill_continuous(low='red', high='red4',
guide='colorbar',na.value = 'red')
gg <- gg + ggtitle("Heat Map, Data analysis of Influenza with Twitter")
gg
